name: Build on request
on:
  workflow_dispatch:

jobs:
  Windows:
    name: Build windows version
    runs-on: windows-2022
    timeout-minutes: 180

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Run vcpkg (Windows x86 static - pinned commit)
        uses: lukka/run-vcpkg@v7
        with:
          doNotCache: true
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
          vcpkgGitCommitId: 3b3bd424827a1f7f4813216f6b32b6c61e386b2e
vcpkgArguments: >-
  install --recurse
  boost-iostreams:x86-windows-static
  boost-asio:x86-windows-static
  boost-beast:x86-windows-static
  boost-system:x86-windows-static
  boost-variant:x86-windows-static
  boost-lockfree:x86-windows-static
  boost-process:x86-windows-static
  boost-program-options:x86-windows-static
  boost-uuid:x86-windows-static
  boost-filesystem:x86-windows-static
  luajit:x86-windows-static
  glew:x86-windows-static
  physfs:x86-windows-static
  openal-soft:x86-windows-static
  libogg:x86-windows-static
  libvorbis:x86-windows-static
  zlib:x86-windows-static
  libzip:x86-windows-static
  openssl:x86-windows-static
  --clean-after-build

      - name: Integrate vcpkg
        run: ${{ runner.workspace }}/vcpkg/vcpkg integrate install

      - name: Compile otclient (DirectX)
        timeout-minutes: 30
        run: |
          cd vc16
          MSBuild /p:Configuration=DirectX /p:Platform=Win32 /p:BUILD_REVISION=${{ github.run_number }}

      - name: Compile otclient (OpenGL)
        timeout-minutes: 30
        run: |
          cd vc16
          MSBuild /p:Configuration=OpenGL /p:Platform=Win32 /p:BUILD_REVISION=${{ github.run_number }}

      - name: Upload Windows binaries
        uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: |
            otclient_gl.exe
            otclient_dx.exe
          if-no-files-found: error

  Android:
    name: Build android version
    runs-on: windows-2022
    timeout-minutes: 180

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Create Android assets (repo script)
        run: powershell -ExecutionPolicy Bypass -File .\create_android_assets.ps1

      - name: Decompress android libs
        run: 7z x android_libs.7z -aoa -oC:\android

      - name: Install Android SDK/NDK (example)
        run: |
          $sdkRoot = "C:\Android\android-sdk"
          $sdkManager = "$sdkRoot\cmdline-tools\latest\bin\sdkmanager.bat"
          Install-AndroidSDKPackages -AndroidSDKManagerPath $sdkManager `
                                    -AndroidSDKRootPath $sdkRoot `
                                    -AndroidPackages "ndk;21.4.7075529"

      - name: Build for Android (MSBuild)
        timeout-minutes: 30
        run: |
          cd android
          $env:VS_NdkRoot="C:\Android\android-sdk\ndk\21.4.7075529"
          MSBuild.exe /p:Configuration=Release /p:Platform="ARM64" /p:BUILD_REVISION=${{ github.run_number }}

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: otclientv8.apk
          if-no-files-found: error

  Mac:
    name: Build mac os version
    runs-on: macos-12
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Homebrew deps
        run: |
          brew update
          brew install physfs pkgconfig luajit xquartz

      - name: Run vcpkg (macOS)
        uses: lukka/run-vcpkg@v7
        with:
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
          vcpkgGitCommitId: 3b3bd424827a1f7f4813216f6b32b6c61e386b2e
          vcpkgArguments: >-
            install
            --triplet x64-osx
            boost-iostreams
            boost-asio
            boost-system
            boost-variant
            boost-lockfree
            boost-beast
            glew
            boost-filesystem
            boost-uuid
            libogg
            libvorbis
            zlib
            opengl
            libzip
            openal-soft
            bzip2
            boost-process
            openssl

      - name: Build with CMake
        uses: lukka/run-cmake@v3
        with:
          buildDirectory: ${{ runner.workspace }}/build
          cmakeAppendedArgs: '-G Ninja -DCMAKE_BUILD_TYPE=Release -DVERSION=${{ github.run_number }}'
          useVcpkgToolchainFile: true

      - name: Rename mac binary
        run: mv '${{ runner.workspace }}/build/otclient' '${{ runner.workspace }}/build/otclient_mac' || true

      - name: Upload mac binary
        uses: actions/upload-artifact@v4
        with:
          name: mac-binary
          path: ${{ runner.workspace }}/build/otclient_mac
          if-no-files-found: error

  Linux:
    name: Build linux version
    runs-on: ubuntu-22.04
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install system deps
        run: sudo apt update && sudo apt install -y cmake ninja-build g++ pkg-config libglu1-mesa-dev libphysfs-dev libopenal-dev libogg-dev libvorbis-dev zlib1g-dev libzip-dev libbz2-dev libssl-dev

      - name: Run vcpkg (Linux)
        uses: lukka/run-vcpkg@v7
        with:
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
          vcpkgGitCommitId: 3b3bd424827a1f7f4813216f6b32b6c61e386b2e
          vcpkgArguments: >-
            install
            --triplet x64-linux
            boost-iostreams
            boost-asio
            boost-system
            boost-variant
            boost-lockfree
            boost-beast
            glew
            boost-filesystem
            boost-uuid
            libogg
            libvorbis
            zlib
            opengl
            libzip
            openal-soft
            bzip2
            boost-process
            openssl
            physfs

      - name: Build with CMake
        uses: lukka/run-cmake@v3
        with:
          buildDirectory: ${{ runner.workspace }}/build
          cmakeAppendedArgs: '-G Ninja -DCMAKE_BUILD_TYPE=Release -DVERSION=${{ github.run_number }}'
          useVcpkgToolchainFile: true

      - name: Rename linux binary
        run: mv '${{ runner.workspace }}/build/otclient' '${{ runner.workspace }}/build/otclient_linux' || true

      - name: Upload linux binary
        uses: actions/upload-artifact@v4
        with:
          name: linux-binary
          path: ${{ runner.workspace }}/build/otclient_linux
          if-no-files-found: error
